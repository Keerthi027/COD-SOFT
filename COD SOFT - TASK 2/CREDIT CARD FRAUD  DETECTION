import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score
file_path = r"C:\Users\siva2\Documents\fraudTest.csv"
df = pd.read_csv(file_path, encoding='utf-8')
print("Columns in dataset:", df.columns)
print("First few rows:\n", df.head())
df.columns = df.columns.str.strip()

if 'is_fraud' not in df.columns:
    raise ValueError("The dataset does not contain an 'is_fraud' column. Please check the column names.")
drop_cols = ['Unnamed: 0', 'trans_date_trans_time', 'first', 'last', 'street', 'city', 'state', 'job', 'dob', 'trans_num']
df = df.drop(columns=drop_cols, errors='ignore')

df = pd.get_dummies(df, drop_first=True)

X = df.drop(columns=['is_fraud'])
y = df['is_fraud']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y, test_size=0.2, random_state=42, stratify=y
)

models = {
    'Logistic Regression': LogisticRegression(),
    'Decision Tree': DecisionTreeClassifier(),
    'Random Forest': RandomForestClassifier(n_estimators=100)
}
results = {}
for name, model in models.items():
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    
    results[name] = {
        'Accuracy': accuracy_score(y_test, y_pred),
        'Precision': precision_score(y_test, y_pred, zero_division=1),
        'Recall': recall_score(y_test, y_pred, zero_division=1),
        'F1 Score': f1_score(y_test, y_pred, zero_division=1)
    }

results_df = pd.DataFrame(results)
print(results_df)
